---
title: Running Tasks
owner: CAPI
---

<strong><%= modified_date %></strong>

This topic describes how to run tasks in Cloud Foundry. 

Tasks are processes that are executed one time in the context of a given application. A task is only run at most once.

## <a id='about-tasks'></a> About Tasks

In contrast to a long running process (LRP), tasks run for a finite amout of time, then stop. Tasks run in their own containers and are designed to use minimal resources. After the task runs, Cloud Foundry destroys the container running the task.

As a single-use object, a task can be checked for its state and for a success or failure message.

### <a id="use-cases"></a> Use Cases for Tasks

Tasks are used to perform one-off jobs. For example, you can use a task to:

* Migrate a database
* Send an email
* Run a batch job
* Run a data processing script
* Process images
* Optimize a search index
* Upload data
* Backup data
* Download content

###<a id="task-proceses"></a> How Tasks Are Run

The life-cycle of a task is:

1. A user initiates a task in Cloud Foundry. A user can initiate a task in CF by using one of the following mechanisms:
   *  `cf run-task APPNAME TASK` command. See 			
   * Cloud Controller v3 API call. See the [Tasks](http://v3-apidocs.cloudfoundry.org/version/3.0.0/index.html#tasks) API reference page.
   * Cloud Foundry Java Client. See [Cloud Foundry Java Client Library](../buildpacks/java/java-client.html) and [Cloud Foundry Java Client](https://github.com/cloudfoundry/cf-java-client).

1. Cloud Foundry creates container specifically for the task.
1. Cloud Foundry runs the task on the container using the value provided to the `cf run-task` command
1. Cloud Foundry destroys container

* A task includes the command to start the process, disk size, and memory allocation
* A task inherits environment variables, service bindings and security groups bound to the application
* Tasks respect app, space, and organization level memory quotas
* Tasks have a memory limit and a disk limit (global cloud foundry defaults for app memory in your bosh manifest or in ERT Application Developer Controls) 
* Tasks are always executed asynchronously

<p class="note"><strong>Note</strong>: You cannot SSH into a running task.</p>

### Task Logging and Execution History

* Task execution history is retained for one month. 
* A syslog drain attached to an app will receive task log output
* Stdout/stderr from the task will be available on the appâ€™s firehose logs

## <a id='manage-tasks'></a> Managing Tasks

* Admins can use the Cloud Controller v3 API to view all the tasks that are running in an org or space. See http://v3-apidocs.cloudfoundry.org/version/3.0.0/index.html#list-tasks

* Admins can set memory usage on a global level (link)

## <a id='run-tasks'></a> Running Tasks

You can use the cf CLI to run a task in the context of an application. 

<p class="note"><strong>Note</strong>: To run tasks with the cf CLI, you must install the cf CLI v6.23 (?) or later. See the <a href="../cf-cli/install-go-cli.html">Installing the Cloud Foundry Command Line Interface</a> topic for information about downloading, installing, and uninstalling the cf CLI.</p>

To run a task on an application, first push your application. Then use the `cf run-task APPNAME TASK` command on your deployed application. For example:

<pre class="terminal">
$ cf run-task my-app "bin/rails db:migrate"
Creating task for app my-app in org jdoe-org / space development as jdoe@pivotal.io...
OK
Task 1 has been submitted successfully for execution.
</pre>

To re-run a task, you must create it as a new task.

## <a id='list-tasks'></a> Listing Tasks

Tasks have the following states:

<table class="nice" border="1">
    <tr>
       <th>State</th>
       <th>Description</th>
	</tr>
	<tr>
		<td>RUNNING</td>
		<td>The task is currently in progress.</td>
	</tr>
	<tr>
		<td>FAILED</td>
		<td>The task did not complete. This state occurs when a task does not work correctly or a user cancels the task.</td>
	</tr>
	<tr>
		<td>SUCCEEDED</td>
		<td>The task completed successfully.</td>
	</tr>
</table>

## <a id='cancel-task'></a>

* A task is cancellable


To support running and managing tasks, the cf CLI supports the following commands:



* <strong>Comment</strong> I think it would be nice to include more how tasks are run. Is there a queue? Is the task run in a separate container?
* provide "architectural" information about how tasks work. For example, are they run in a separate container.
* different container, same code

For example, if you run cf run-task spring-music "echo blah", CF submits the task for execution and displays:

<code>
Creating task for app spring-music in org sleslie_pivotal / space development as sleslie@pivotal.io...
OK

Task 0 has been submitted successfully for execution.
</code>

To view the tasks running on an application:

cf tasks spring-music

id   name       state       start time                      command
0    e4d3c654   SUCCEEDED   Tue, 15 Nov 2016 19:25:55 UTC   echo blah



Cloud Foundry



## Sample Application

The <strong>github_link_to_example</strong> application demonstrates ...