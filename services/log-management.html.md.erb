---
title: Using Log Management Services
---

_This page assumes you are using cf CLI v6._

This topic describes how to drain logs for applications on Cloud Foundry use a log management service.

Cloud Foundry aggregates logs for all instances of your applications as well as for requests made to your applications through internal components of Cloud Foundry. For example, when an application request is forwarded to the application by the Cloud Foundry Router, the Router records that event in the application log stream. These logs can be streamed to your terminal using the CLI command `cf logs APP`.

If you want to persist more than the limited amount of logging information that Cloud Foundry can buffer, Cloud Foundry can drain these logs to a log management service.

For more information on the systems responsible for log aggregation and streaming in Cloud Foundry, see [Doppler](../deploy-apps/streaming-logs.html).

## <a id='marketplace'></a>Using Marketplace Log Drain Services ##

If a service that supports syslog draining is available in your Cloud Foundry marketplace, streaming application logs to it is as simple as creating an instance of the service and binding it to your application. See [Managing Service Instances](managing-services.html) for more information.

<p class='note'><strong>Note:</strong> Not all marketplace services support syslog drains. Services may implement an integration with Cloud Foundry that enables automated streaming of application syslogs. <%= vars.custom_services %></p>

## <a id='other'></a>Streaming Application Logs to Other Services##

If a compatible log management service is not available in your Cloud Foundry marketplace, you can use user-provided service instances to stream the same logs to a system of your choice. Below you'll find [generic instructions](#other-generic) for any log management service, as well as [specific instructions](#other-selected) for a few services we've tested.

### <a id='other-selected'></a>Instructions for Selected Services

See [Service-Specific Instructions for Streaming Application Logs](log-management-thirdparty-svc.html) to learn how to stream application logs to specific services including Papertrail, Splunk, Splunk Storm, and SumoLogic.

### <a id='other-generic'></a>Generic Instructions

#### Step 1: Configure the Log Management Service

Set up a communication channel between the log management service and your Cloud Foundry deployment as follows:

1. Obtain the <%=vars.external_ips%> that <%=vars.admin%> assigns to outbound traffic.

1. Provide these IP addresses to the log management service. The specific steps to configure
a third-party log management service depend on the service. See [Configuring Selected Third-Party Log Management Services](log-management-thirdparty-svc.html) for instructions for a few services.

1. Whitelist these IP addresses to ensure unrestricted log routing to your log management service.

1. Record the syslog URL provided by the third-party service. Third-party services
typically provide a syslog URL to use as an endpoint for incoming log data. You use this syslog URL in [Step 2: Create a User-provided Service Instance](#create).
<br><br>
    Cloud Foundry uses the syslog URL to route messages to the service.
    The syslog URL has a scheme of `syslog`, `syslog-tls`, or `https`, and can
    include a port number.
    For example:

    `syslog://logs.example.com:1234`

    <p class="note"><strong>Note</strong>: <%=vars.product_short%> does not support using <code>syslog-tls</code> with self-signed certificates. If you are running your own syslog server and want to use <code>syslog-tls</code>, you must have an SSL certificate signed by a well-known certificate authority.</p>

#### Step 2: Create a User-provided Service Instance

Create a user-provided service instance using the [cf CLI](../installcf/) `create-user-provided-service` command with the `-l` flag and the syslog URL that you obtained in [Step 1: Configure the Log Management Service](#config).
The `-l` flag configures the syslog drain.

<pre class="terminal">
$ cf create-user-provided-service SERVICE-INSTANCE -l SYSLOG-URL
</pre>

Refer to [User-Provided Service Instances](./user-provided.html) for more information.

#### Step 3: Bind the Service Instance

You have two options for binding the service instance to an application:

* Run `cf push` with a manifest. The services block in the manifest must specify the service instance that you want to bind.
* Run `cf bind-service`. After a short delay, logs begin to flow automatically.

Refer to [Binding User-Provided Service Instances to Applications](user-provided.html#bind-example) for more information.

#### Step 4: Verify Logs are Draining

To verify that logs are draining correctly to a third-party log management service:

1. Take actions that produce log messages, such as making requests of your app.

1. Compare the logs displayed in the CLI against those displayed by the log management service.

For example, if your application serves web pages, you can send HTTP requests to the application.
In Cloud Foundry, these generate Router log messages, which you can view in the CLI.
Your third-party log management service should display corresponding messages.

<p class="note"><strong>Note</strong>: For security reasons, Cloud Foundry applications do not respond to ping. Therefore, you cannot use ping to generate log entries.</p>
