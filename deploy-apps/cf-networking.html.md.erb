---
title: Administering Container-to-Container Networking
owner: Container-to-Container Networking
---

This topic describes how to configure the Container-to-Container Networking feature. For an overview of how Container-to-Container Networking works, see the [Understanding Container-to-Container Networking](../../concepts/understand-cf-networking.html) topic.

<% if vars.product_name == 'CF' || vars.product_name == 'PCF'%>
##<a id="enable"></a>Enable Container-to-Container Networking
<% end %>

<% if vars.product_name == 'CF' %>
 <%= partial 'c2c_oss_enable' %>
<% elsif vars.product_name == 'PCF' %>
 <%= partial "../../customizing/c2c_pcf_enable" %>
<% else %>
<% end %>

##<a id="create-policies"></a>Create Policies for Container-to-Container Networking

This section describes how to create and modify Container-to-Container Networking policies using a plugin for the Cloud Foundry Command Line Interface (cf CLI).

<% if vars.product_name == 'PWS' %>
<%= partial '../../appsman-services/c2c_pws_create' %>
<% else %>

To use the plugin, you must have either the `network.write` or `network.admin` UAA scope.

<table>
  <tr>
    <th>UAA Scope</th>
    <th>Suitable for&hellip;</th>
    <th>Allows users to create policies&hellip;</th>
  </tr>
  <tr>
    <td><code>network.admin</code></td>
    <td>operators</td>
    <td>for any apps in the CF deployment</td>
  </tr>
  <tr>
    <td><code>network.write</code></td>
    <td>space developers</td>
    <td>for apps in spaces that they can access</td>
   </tr>
</table>

If you are a CF admin, you already have the `network.admin` scope. An admin can also grant the `network.admin` scope to a space developer.

<% if vars.product_name == 'CF' || vars.product_name == 'PCF' %>
  <%= vars.uaa_cli %>
<% else %>
  <% end %>
<% end %>

### Install the Plugin

Follow these steps to download and install the Network Policy plugin for the cf CLI:

1. Ensure that you are using the cf CLI v6.28 or higher:
  <pre class="terminal">
  $ cf version
  </pre>
  For more information about updating the cf CLI, see the [Installing the cf CLI](../../cf-cli/install-g-cli.html) topic.
1. Install the plugin from the [Cloud Foundry Community Plugins Repository](https://plugins.cloudfoundry.org/):
  <pre class="terminal">
  $ cf install-plugin -r CF-Community network-policy
  </pre>

### Create a Policy

To create a policy that allows direct network traffic from one app to another, enter the following command:

<pre class="terminal">
$ cf allow-access SOURCE-APP DESTINATION-APP --protocol PROTOCOL --port PORTS
</pre>

Replace the placeholders in the above command as follows:

* `SOURCE-APP` is the name of the app that will send traffic.<br>
* `DESTINATION-APP` is the name of the app that will receive traffic.<br>
* `PROTOCOL` is one of the following: `tcp` or `udp`.<br>
* `PORTS` are the ports at which to connect to the destination app. The allowed range is from `1` to `65535`. You can specify a single port, such as `8080`, or a range of ports, such as `8080-8090`.<br>

The following example command allows access from the `frontend` app to the `backend` app over TCP at port 8080:

<pre class="terminal">
$ cf allow-access frontend backend --protocol tcp --port 8080
Allowing traffic from frontend to backend as admin...
OK 
</pre>

### List Policies

You can list all the policies in your deployment or just the policies for which a single app is either the source or the destination:

+ To list the all the policies in your deployment, enter the following command:

    <pre class="terminal">
    $ cf list-access
    </pre>
+ To list the policies for an app, enter the following command:

    <pre class="terminal">
    $ cf list-access --app MY-APP
    </pre>

    The following example command lists policies for the app `frontend`:
    
    <pre class="terminal">
    $ cf list-access --app frontend
    Listing policies as admin...
    OK
    
    Source    Destination    Protocol    Port
    frontend  backend        tcp         8080
    </pre>

### Delete a Policy

To delete a policy that allows direct network traffic from one app to another, enter the following command:
<pre class="terminal">
$ cf remove-access SOURCE-APP DESTINATION-APP --protocol PROTOCOL --port PORTS
</pre>

The following command deletes the policy that allowed the `frontend` app to communicate with the `backend` app over TCP on port 8080:
<pre class="terminal">
$ cf remove-access frontend backend --protocol tcp --port 8080
Denying traffic from frontend to backend as admin...
OK 
</pre>
