---
title: Using Experimental cf CLI Commands
owner: CF CLI
---

<strong><%= modified_date %></strong>

This topic describes how to use the experimental Cloud Foundry Command Line Interface (cf CLI) commands offered by the Cloud Controller V3 APIs. 

These commands provide developers with the ability to better orchestrate app deployment workflows. New features include the deployment and management of apps with multiple processes, staging apps with multiple buildpacks, and uploading and staging multiple versions of a single app.

<%= vars.v3_cli_versions %>

For more information about cf CLI commands, see the [Cloud Foundry CLI Reference Guide](../cf-cli/cf-help.html). For more information about the Cloud Controller V3 API, see the [API documentation](http://v3-apidocs.cloudfoundry.org/).

<p class="note"><strong>Note</strong>: Because these commands are experimental, they are not guaranteed to be available or compatible in subsequent cf CLI releases.</p>

##<a id='overview'></a> Overview

The new commands include a `v3-` prefix. Some commands are mostly equivalent to existing commands, but call the V3 APIs, or expose new flags to unlock additional features. Other commands expose the new primitives of apps, such as by performing operations on an app's packages and droplets.

In the V2 APIs, running and staging an app are tightly coupled operations. As a result, an app cannot be staging and running at the same time. The V3 APIs offer developers more granular control over the uploading, staging, and running of an app. 

##<a id='commands'></a> Commands

Consult the following table for a description of the experimental commands.

<table>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
<tr>
<td><code>v3-app</code></td>
<td>Retrieves and display an app's GUID, suppressing all other health and status output</td>
</tr>
<tr>
<td><code>v3-apps</code></td>
<td>Lists all apps in the target space</td>
</tr>
<tr>
<td><code>v3-create-app</code></td>
<td>Creates a V3 app</td>
</tr>
<tr>
<td><code>v3-create-package</code></td>
<td>Uploads a V3 package</td>
</tr>
<tr>
<td><code>v3-delete</code></td>
<td>Deletes a V3 app</td>
</tr>
<tr>
<td><code>v3-droplets</code></td>
<td>Lists droplets of an app</td>
</tr>
<tr>
<td><code>v3-get-health-check</code></td>
<td>Shows the type of health check performed on an app</td>
</tr>
<tr>
<td><code>v3-packages</code></td>
<td>Lists packages of an app</td>
</tr>
<tr>
<td><code>v3-push</code></td>
<td>Pushes a new app or syncs changes to an existing app</td>
</tr>
<tr>
<td><code>v3-restart</code></td>
<td>Stops all instances of an app and then starts them again, which may cause downtime</td>
</tr>
<tr>
<td><code>v3-restart-app-instance</code></td>
<td>Terminates and then instantiates an app instance</td>
</tr>
<tr>
<td><code>v3-set-droplet</code></td>
<td>Sets the droplet used to run an app</td>
</tr>
<tr>
<td><code>v3-set-health-check</code></td>
<td>Changes type of health check performed on an app's process</td>
</tr>
<tr>
<td><code>v3-stage</code></td>
<td>Creates a new droplet for an app</td>
</tr>
<tr>
<td><code>v3-start</code></td>
<td>Starts an app</td>
</tr>
<tr>
<td><code>v3-stop</code></td>
<td>Stops an app</td>
</tr>
</table>
        
##<a id='considerations'></a> Considerations

Keep in mind the following considerations when using the experimental commands:

* `v3-push` supports only a subset of features of `push`. In particular, it does not support app manifests.  
* For some commands, such as `set-env`, `ssh`, and `bind-service`, no new V3 version exists. In those cases, use the old commands.  
* You can use V3 and old commands together, but some combinations may give unexpected results. For example, if you use V3 commands to create an app with a package but it is not staged, or you use `v3-push` to push an app but it fails to stage, the old `apps` command does not return the app.

##<a id='procfile'></a> Declaring Multiple App Processes with a Procfile

Developers can supply a Procfile with their app in order to run multiple long-lived processes using a single codebase. 

To use a Procfile, include it in the root of your application directory and push your application.

For more information about Procfiles, see the [About Procfiles](../buildpacks/prod-server.html#procfile) section of the <em>Production Server Configuration</em> topic.